# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Player Statically and Push Docker Images

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      # Create Release PR
      - uses: google-github-actions/release-please-action@v3
        id: semver
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: yt-dl-ipfs
          command: release-pr
      # Checkout Code
      - name: Checkout
        uses: actions/checkout@v3
      # Setup GH Pages
      - name: Setup Pages
        uses: actions/configure-pages@v2
      # Setup Node
      - name: Build on Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      # Run BUILD
      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}
      - run: npm run build
        if: ${{ steps.release.outputs.release_created }}
      - run: npm version ${{ steps.semver.outputs.version }} --no-git-tag-version
        if: ${{ steps.release.outputs.release_created }}
      # Push Pages Artifact
      - name: Upload artifact
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/upload-pages-artifact@v1
        with:
          path: './dist/player/'
      # Push NPM Packgae
      - run: npm publish
        if: ${{ steps.release.outputs.release_created }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      # Docker
      # Log into Docker Hub
      - name: Login to Docker Hub
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      # Setup docker buildx
      - name: Set up QEMU
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/setup-buildx-action@v2
      # Build and Push docker images.
      - name: Build and Push Docker Image
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ci.dockerfile
          push: true
          tags: |
            whizzzkid/yt-dl-ipfs:latest
            whizzzkid/yt-dl-ipfs:${{ steps.semver.outputs.version }}
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7


  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
